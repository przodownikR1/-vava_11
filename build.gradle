buildscript {
    ext {
        springBootVersion = '1.3.2.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
          }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
        classpath "org.sonarqube.gradle:gradle-sonarqube-plugin:1.1"
        classpath("gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.4.7")
    }
}


apply plugin: 'java'
apply plugin: 'spring-boot' 

apply plugin: 'com.gorylenko.gradle-git-properties'



apply plugin: 'org.sonarqube'


sonarqube {
    properties {
       property "sonar.projectKey", "vavaPOC"
       property "sonar.projectName", "vavaPOC"

        

        property "sonar.host.url", "http://localhost:9000"
        property "sonar.jdbc.url", "jdbc:mysql://localhost:3306/sonar?useUnicode=true&characterEncoding=utf8&rewriteBatchedStatements=true"
        property "sonar.jdbc.driverClassName", "com.mysql.jdbc.Driver"
        property "sonar.jdbc.username", "sonar3"
        property "sonar.jdbc.password", "sonar3"
    }
  }

gitProperties {
    gitPropertiesDir = new File("${project.rootDir}/src/main/resources")
}

jar {
    baseName = 'vavatech'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

ext{
    thymeleafVersion = "2.1.3.RELEASE"
}
dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-cache')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-devtools')
    compile('org.projectlombok:lombok')
    compile('org.springframework.boot:spring-boot-starter-mail')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-validation')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('com.h2database:h2')
    compile 'cglib:cglib:3.2.0'
    
    compile 'org.thymeleaf.extras:thymeleaf-extras-springsecurity4:2.1.2.RELEASE'
    
    
    
    compile 'org.webjars:bootstrap:3.3.5'
    compile 'org.webjars:jquery:2.1.4'
    compile 'org.webjars:jquery-ui:1.11.4'
    compile 'org.webjars:jquery-ui-themes:1.11.4'
    compile ("org.webjars.bower:jquery.bootgrid:1.2.0") {
        exclude group: 'org.webjars.bower'
    }
    
    compile 'net.sf.ehcache:ehcache-core:2.6.11'
    
    
  
    
    compile 'com.google.guava:guava:18.0'
    testCompile 'junit:junit:4.12'
    testCompile('org.springframework.boot:spring-boot-starter-test') 
}

dependencyManagement {
	imports { 
		mavenBom "org.springframework.cloud:spring-cloud-starter-parent:Brixton.M3" 
	}
}

configurations {
    all*.exclude group: "commons-logging", module: "commons-logging"
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'org.springframework') {
            details.useVersion '4.2.3.RELEASE'
        }
       if (details.requested.group == 'org.springframework.security') {
            details.useVersion '4.0.3.RELEASE'
        }
        if (details.requested.group == 'org.hibernate') {
            details.useVersion '5.0.2.Final'
        }
    }
}


task wrapper(type: Wrapper) {
    gradleVersion = '2.9'
}
